/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.generator;

import mydsl.FSM;
import mydsl.State;
import mydsl.Transition;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _get = resource.getContents().get(0);
    FSM myfsm = ((FSM) _get);
    fsa.generateFile("Initial.java", this.vartxt("Initial"));
    fsa.generateFile("Final.java", this.vartxt("Final"));
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package fsm;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class State{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("String name;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public State(String nameSt){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.name = nameSt;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getname(){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.name;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setname(String newname) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.name = newname;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("} ");
    _builder.newLine();
    String inittxt = _builder.toString();
    fsa.generateFile("State.java", inittxt);
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("package fsm;");
    _builder_1.newLine();
    _builder_1.append("import fsm.State;");
    _builder_1.newLine();
    _builder_1.append("import fsm.Initial;");
    _builder_1.newLine();
    _builder_1.append("import fsm.Final;");
    _builder_1.newLine();
    _builder_1.append("import java.util.Scanner;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("public class ");
    String _name = myfsm.getName();
    _builder_1.append(_name);
    _builder_1.append("{");
    _builder_1.newLineIfNotEmpty();
    _builder_1.append("\t");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("public static void main(String[] args) {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("Initial ");
    String _name_1 = myfsm.getInitial().getName();
    _builder_1.append(_name_1, "\t\t");
    _builder_1.append(" = new Initial (\"");
    String _name_2 = myfsm.getInitial().getName();
    _builder_1.append(_name_2, "\t\t");
    _builder_1.append("\");");
    _builder_1.newLineIfNotEmpty();
    _builder_1.append("\t\t");
    _builder_1.append("Final ");
    String _name_3 = myfsm.getFinal().getName();
    _builder_1.append(_name_3, "\t\t");
    _builder_1.append(" = new Final (\"");
    String _name_4 = myfsm.getFinal().getName();
    _builder_1.append(_name_4, "\t\t");
    _builder_1.append("\");");
    _builder_1.newLineIfNotEmpty();
    {
      EList<State> _state = myfsm.getState();
      for(final State i : _state) {
        _builder_1.append("\t\t");
        _builder_1.append("State ");
        String _name_5 = i.getName();
        _builder_1.append(_name_5, "\t\t");
        _builder_1.append(" = new State(\"");
        String _name_6 = i.getName();
        _builder_1.append(_name_6, "\t\t");
        _builder_1.append("\");");
        _builder_1.newLineIfNotEmpty();
      }
    }
    _builder_1.append("\t\t");
    _builder_1.append("State EtatCour = new State(");
    String _name_7 = myfsm.getInitial().getName();
    _builder_1.append(_name_7, "\t\t");
    _builder_1.append(".getname());");
    _builder_1.newLineIfNotEmpty();
    _builder_1.append("\t\t");
    _builder_1.append("while(true){");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("Scanner sc = new Scanner(System.in);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("System.out.println(\"Veuillez saisir un trigger :\");");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("String inpt = sc.nextLine();");
    _builder_1.newLine();
    {
      EList<Transition> _transition = myfsm.getTransition();
      for(final Transition i_1 : _transition) {
        _builder_1.append("\t\t\t");
        _builder_1.append("if(EtatCour.getname().equals(");
        String _name_8 = i_1.getState().get(0).getName();
        _builder_1.append(_name_8, "\t\t\t");
        _builder_1.append(".getname()) && inpt.equals(\"");
        String _trigger = i_1.getTrigger();
        _builder_1.append(_trigger, "\t\t\t");
        _builder_1.append("\")){");
        _builder_1.newLineIfNotEmpty();
        _builder_1.append("\t\t\t");
        _builder_1.append("\t");
        _builder_1.append("EtatCour.setname(");
        String _name_9 = i_1.getState().get(1).getName();
        _builder_1.append(_name_9, "\t\t\t\t");
        _builder_1.append(".getname());");
        _builder_1.newLineIfNotEmpty();
        _builder_1.append("\t\t\t");
        _builder_1.append("\t");
        _builder_1.append("}");
        _builder_1.newLine();
        _builder_1.append("\t\t\t");
        _builder_1.append("\t\t\t\t\t\t\t");
        _builder_1.newLine();
      }
    }
    _builder_1.append("\t\t\t");
    _builder_1.append("if(EtatCour.getname() == ");
    String _name_10 = myfsm.getFinal().getName();
    _builder_1.append(_name_10, "\t\t\t");
    _builder_1.append(".getname()){");
    _builder_1.newLineIfNotEmpty();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("System.out.println(\"Etat final atteint\");");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("break;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("System.out.println(EtatCour.getname());");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("}");
    String fsmtext = _builder_1.toString();
    String _name_11 = myfsm.getName();
    String _plus = (_name_11 + ".java");
    fsa.generateFile(_plus, fsmtext);
  }
  
  public CharSequence vartxt(final String name) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package fsm;");
    _builder.newLine();
    _builder.append("import fsm.State;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class ");
    _builder.append(name);
    _builder.append(" extends State{");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("String name;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ");
    _builder.append(name, "\t");
    _builder.append("(String nameSt){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("super(nameSt)");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.name = nameSt");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getname(){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.name;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setname(String newname) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.name = newname;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("} ");
    _builder.newLine();
    return _builder;
  }
}
