/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import mydsl.FSM;
import mydsl.Final;
import mydsl.Initial;
import mydsl.State;
import mydsl.Transition;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;
  
  protected void _format(final FSM fSM, @Extension final IFormattableDocument document) {
    document.<Final>format(fSM.getFinal());
    document.<Initial>format(fSM.getInitial());
    EList<State> _state = fSM.getState();
    for (final State state : _state) {
      document.<State>format(state);
    }
    EList<Transition> _transition = fSM.getTransition();
    for (final Transition transition : _transition) {
      document.<Transition>format(transition);
    }
  }
  
  public void format(final Object fSM, final IFormattableDocument document) {
    if (fSM instanceof XtextResource) {
      _format((XtextResource)fSM, document);
      return;
    } else if (fSM instanceof FSM) {
      _format((FSM)fSM, document);
      return;
    } else if (fSM instanceof EObject) {
      _format((EObject)fSM, document);
      return;
    } else if (fSM == null) {
      _format((Void)null, document);
      return;
    } else if (fSM != null) {
      _format(fSM, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(fSM, document).toString());
    }
  }
}
