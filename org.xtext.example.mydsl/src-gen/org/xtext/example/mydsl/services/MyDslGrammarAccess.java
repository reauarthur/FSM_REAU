/*
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class FSMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.FSM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFSMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cFinalKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFinalAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFinalFinalParserRuleCall_3_0 = (RuleCall)cFinalAssignment_3.eContents().get(0);
		private final Keyword cInitialKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInitialAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInitialInitialParserRuleCall_5_0 = (RuleCall)cInitialAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Keyword cStateKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Assignment cStateAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cStateStateParserRuleCall_6_0_1_0 = (RuleCall)cStateAssignment_6_0_1.eContents().get(0);
		private final Group cGroup_6_0_2 = (Group)cGroup_6_0.eContents().get(2);
		private final Keyword cCommaKeyword_6_0_2_0 = (Keyword)cGroup_6_0_2.eContents().get(0);
		private final Assignment cStateAssignment_6_0_2_1 = (Assignment)cGroup_6_0_2.eContents().get(1);
		private final RuleCall cStateStateParserRuleCall_6_0_2_1_0 = (RuleCall)cStateAssignment_6_0_2_1.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cTransitionKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cTransitionAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cTransitionTransitionParserRuleCall_6_1_1_0 = (RuleCall)cTransitionAssignment_6_1_1.eContents().get(0);
		private final Group cGroup_6_1_2 = (Group)cGroup_6_1.eContents().get(2);
		private final Keyword cCommaKeyword_6_1_2_0 = (Keyword)cGroup_6_1_2.eContents().get(0);
		private final Assignment cTransitionAssignment_6_1_2_1 = (Assignment)cGroup_6_1_2.eContents().get(1);
		private final RuleCall cTransitionTransitionParserRuleCall_6_1_2_1_0 = (RuleCall)cTransitionAssignment_6_1_2_1.eContents().get(0);
		
		//FSM:
		//	'FSM'
		//	name=EString
		//	'final' final=Final
		//	'initial' initial=Initial (('state' state+=State ("," state+=State)*) ('transition' transition+=Transition (","
		//	transition+=Transition)*)*)+;
		@Override public ParserRule getRule() { return rule; }
		
		//'FSM' name=EString 'final' final=Final 'initial' initial=Initial (('state' state+=State ("," state+=State)*)
		//('transition' transition+=Transition ("," transition+=Transition)*)*)+
		public Group getGroup() { return cGroup; }
		
		//'FSM'
		public Keyword getFSMKeyword_0() { return cFSMKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'final'
		public Keyword getFinalKeyword_2() { return cFinalKeyword_2; }
		
		//final=Final
		public Assignment getFinalAssignment_3() { return cFinalAssignment_3; }
		
		//Final
		public RuleCall getFinalFinalParserRuleCall_3_0() { return cFinalFinalParserRuleCall_3_0; }
		
		//'initial'
		public Keyword getInitialKeyword_4() { return cInitialKeyword_4; }
		
		//initial=Initial
		public Assignment getInitialAssignment_5() { return cInitialAssignment_5; }
		
		//Initial
		public RuleCall getInitialInitialParserRuleCall_5_0() { return cInitialInitialParserRuleCall_5_0; }
		
		//(('state' state+=State ("," state+=State)*) ('transition' transition+=Transition ("," transition+=Transition)*)*)+
		public Group getGroup_6() { return cGroup_6; }
		
		//'state' state+=State ("," state+=State)*
		public Group getGroup_6_0() { return cGroup_6_0; }
		
		//'state'
		public Keyword getStateKeyword_6_0_0() { return cStateKeyword_6_0_0; }
		
		//state+=State
		public Assignment getStateAssignment_6_0_1() { return cStateAssignment_6_0_1; }
		
		//State
		public RuleCall getStateStateParserRuleCall_6_0_1_0() { return cStateStateParserRuleCall_6_0_1_0; }
		
		//("," state+=State)*
		public Group getGroup_6_0_2() { return cGroup_6_0_2; }
		
		//","
		public Keyword getCommaKeyword_6_0_2_0() { return cCommaKeyword_6_0_2_0; }
		
		//state+=State
		public Assignment getStateAssignment_6_0_2_1() { return cStateAssignment_6_0_2_1; }
		
		//State
		public RuleCall getStateStateParserRuleCall_6_0_2_1_0() { return cStateStateParserRuleCall_6_0_2_1_0; }
		
		//('transition' transition+=Transition ("," transition+=Transition)*)*
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//'transition'
		public Keyword getTransitionKeyword_6_1_0() { return cTransitionKeyword_6_1_0; }
		
		//transition+=Transition
		public Assignment getTransitionAssignment_6_1_1() { return cTransitionAssignment_6_1_1; }
		
		//Transition
		public RuleCall getTransitionTransitionParserRuleCall_6_1_1_0() { return cTransitionTransitionParserRuleCall_6_1_1_0; }
		
		//("," transition+=Transition)*
		public Group getGroup_6_1_2() { return cGroup_6_1_2; }
		
		//","
		public Keyword getCommaKeyword_6_1_2_0() { return cCommaKeyword_6_1_2_0; }
		
		//transition+=Transition
		public Assignment getTransitionAssignment_6_1_2_1() { return cTransitionAssignment_6_1_2_1; }
		
		//Transition
		public RuleCall getTransitionTransitionParserRuleCall_6_1_2_1_0() { return cTransitionTransitionParserRuleCall_6_1_2_1_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//State:
		//	{State} name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{State} name=EString
		public Group getGroup() { return cGroup; }
		
		//{State}
		public Action getStateAction_0() { return cStateAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cTriggerKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTriggerAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTriggerEStringParserRuleCall_1_1_0 = (RuleCall)cTriggerAssignment_1_1.eContents().get(0);
		private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cStateStateCrossReference_3_0 = (CrossReference)cStateAssignment_3.eContents().get(0);
		private final RuleCall cStateStateEStringParserRuleCall_3_0_1 = (RuleCall)cStateStateCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cStateStateCrossReference_4_1_0 = (CrossReference)cStateAssignment_4_1.eContents().get(0);
		private final RuleCall cStateStateEStringParserRuleCall_4_1_0_1 = (RuleCall)cStateStateCrossReference_4_1_0.eContents().get(1);
		
		//Transition:
		//	name=EString ('trigger' trigger=EString)?
		//	'from' state+=[State|EString] ("->" state+=[State|EString])*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString ('trigger' trigger=EString)? 'from' state+=[State|EString] ("->" state+=[State|EString])*
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//('trigger' trigger=EString)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'trigger'
		public Keyword getTriggerKeyword_1_0() { return cTriggerKeyword_1_0; }
		
		//trigger=EString
		public Assignment getTriggerAssignment_1_1() { return cTriggerAssignment_1_1; }
		
		//EString
		public RuleCall getTriggerEStringParserRuleCall_1_1_0() { return cTriggerEStringParserRuleCall_1_1_0; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//state+=[State|EString]
		public Assignment getStateAssignment_3() { return cStateAssignment_3; }
		
		//[State|EString]
		public CrossReference getStateStateCrossReference_3_0() { return cStateStateCrossReference_3_0; }
		
		//EString
		public RuleCall getStateStateEStringParserRuleCall_3_0_1() { return cStateStateEStringParserRuleCall_3_0_1; }
		
		//("->" state+=[State|EString])*
		public Group getGroup_4() { return cGroup_4; }
		
		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_4_0() { return cHyphenMinusGreaterThanSignKeyword_4_0; }
		
		//state+=[State|EString]
		public Assignment getStateAssignment_4_1() { return cStateAssignment_4_1; }
		
		//[State|EString]
		public CrossReference getStateStateCrossReference_4_1_0() { return cStateStateCrossReference_4_1_0; }
		
		//EString
		public RuleCall getStateStateEStringParserRuleCall_4_1_0_1() { return cStateStateEStringParserRuleCall_4_1_0_1; }
	}
	public class FinalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Final");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFinalAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Final:
		//	{Final} name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Final} name=EString
		public Group getGroup() { return cGroup; }
		
		//{Final}
		public Action getFinalAction_0() { return cFinalAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class InitialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Initial");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInitialAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Initial:
		//	{Initial} name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Initial} name=EString
		public Group getGroup() { return cGroup; }
		
		//{Initial}
		public Action getInitialAction_0() { return cInitialAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	
	
	private final FSMElements pFSM;
	private final EStringElements pEString;
	private final StateElements pState;
	private final TransitionElements pTransition;
	private final FinalElements pFinal;
	private final InitialElements pInitial;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pFSM = new FSMElements();
		this.pEString = new EStringElements();
		this.pState = new StateElements();
		this.pTransition = new TransitionElements();
		this.pFinal = new FinalElements();
		this.pInitial = new InitialElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//FSM:
	//	'FSM'
	//	name=EString
	//	'final' final=Final
	//	'initial' initial=Initial (('state' state+=State ("," state+=State)*) ('transition' transition+=Transition (","
	//	transition+=Transition)*)*)+;
	public FSMElements getFSMAccess() {
		return pFSM;
	}
	
	public ParserRule getFSMRule() {
		return getFSMAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//State:
	//	{State} name=EString;
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	//Transition:
	//	name=EString ('trigger' trigger=EString)?
	//	'from' state+=[State|EString] ("->" state+=[State|EString])*;
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}
	
	//Final:
	//	{Final} name=EString;
	public FinalElements getFinalAccess() {
		return pFinal;
	}
	
	public ParserRule getFinalRule() {
		return getFinalAccess().getRule();
	}
	
	//Initial:
	//	{Initial} name=EString;
	public InitialElements getInitialAccess() {
		return pInitial;
	}
	
	public ParserRule getInitialRule() {
		return getInitialAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
